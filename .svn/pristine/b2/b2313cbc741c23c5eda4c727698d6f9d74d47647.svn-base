package view.input;

import java.awt.Component;
import java.awt.Dimension;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.JPanel;

import db.manipulation.DbManipulation;
import model.table.CustomTableModel;
import model.table.GeneralTableModel;
import model.tree.TreeElement.Column;
import view.table.MainTableView;

public class LinkedField extends JPanel implements Input{

	private Input field;
	private MainTableView tableView;
	private String refColumn;

	public LinkedField(Input field, String refTable, String refColumn) {
		this.field = field;
		this.refColumn = refColumn;
		
		DbManipulation dbm = DbManipulation.dbManip.get(0);
	
			try {
				PreparedStatement prepStmt = dbm.getConnection()
						.prepareStatement("SELECT * FROM [PIS2022].[pisg2].[" + refTable + "]");
				ResultSet resultSet = prepStmt.executeQuery();
				
				CustomTableModel tableModel = new CustomTableModel(resultSet);
				this.tableView = new MainTableView();
				this.tableView.setTableModel(tableModel);
			} catch (SQLException e1) {
				e1.printStackTrace();
			}

		JButton btn = new JButton("...");
		btn.setPreferredSize(new Dimension(20, 15));

		selectRowThatMatchesField();
		
		btn.addActionListener(e -> {new SelectionDialog(this, tableView, refTable, refColumn);});
		
		setReferenceBtn(btn);
		add((Component) field);
	}
	
	@Override
	public Object getValue() {
		return field.getValue();
	}
	
	@Override
	public void setValue(Object object) {
		field.setValue(object);
		selectRowThatMatchesField();
	}
	
	@Override
	public void setReferenceBtn(Component btn) {
		field.setReferenceBtn(btn);
	}

	private void selectRowThatMatchesField() {
		GeneralTableModel tableModel = (GeneralTableModel) tableView.getModel();
		int matchingColumn = tableModel.getIndexOfColumn(refColumn);

		for (int i = 0; i < tableModel.getRowCount(); i++) {
			Object fieldValue = tableModel.getValueAt(i, matchingColumn);
			if (getValue() == null) {
				tableView.setRowSelectionInterval(0, 0);
				return;
			} else if (getValue().equals(fieldValue)){
				tableView.setRowSelectionInterval(i, i);
				return;
			}
		}
	}


}
