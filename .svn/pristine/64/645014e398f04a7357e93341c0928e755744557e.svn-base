package controller.state;

import java.util.ArrayList;
import java.util.List;

import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.TableModel;

import view.input.InputPanel;
import view.input.InputPanel.SubmitAction;
import view.statusbar.StatusBar;
import view.table.TablePanel;
import view.menubar.EditMenu;
import view.menubar.MenuBar;

public class Creation implements EditorState {

	private TablePanel context;
	private InputPanel inputPanel;
	private MenuBar menuBar;

	public Creation(TablePanel context, MenuBar menuBar) {
		this.context = context;
		this.inputPanel = context.getInputPanel();
		this.menuBar = menuBar;
		inputPanel.setSubmitAction(SubmitAction.CREATE);
		context.getStatusBar().setStatusMessage("Create item");

		context.getChangeBtn().setEnabled(false);
		context.getDeleteBtn().setEnabled(false);
		context.getCancelBtn().setEnabled(true);
		
		EditMenu editM = this.menuBar.getEditMenu();
		editM.getCreateItem().setEnabled(true);;
		editM.getDeleteItem().setEnabled(false);
		editM.getChangeItem().setEnabled(false);
		editM.getCancelItem().setEnabled(true);
	}

	@Override
	public void handleSelectionChanged(ListSelectionEvent e) {
		if (e.getValueIsAdjusting()) {
			return;
		}
		TableModel model = context.getTable().getModel();

		ListSelectionModel lsm = (ListSelectionModel) e.getSource();
		if (!lsm.isSelectionEmpty()) {
			int selectedRow = lsm.getMinSelectionIndex();
			
			List<Object> row = new ArrayList<>();
			for (int i = 0; i < model.getColumnCount(); i++) {
				row.add(model.getValueAt(selectedRow, i));
			}

			inputPanel.fillInputs(row);
			inputPanel.disablePKeyInputs();

			context.setEditorState(new Selection(context, menuBar));

		}
	}

	@Override
	public void handleCreate() {
		inputPanel.clearInputs();
	}

	@Override
	public void handleChange() {
	}

	@Override
	public void handleDelete() {
	}

	@Override
	public void handleCancel() {
		inputPanel.setVisible(false);
		inputPanel.clearInputs();

		context.setEditorState(new Idle(context, menuBar));
	}

}
