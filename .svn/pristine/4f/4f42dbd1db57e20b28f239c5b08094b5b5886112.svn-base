package view.input;

import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.swing.JPanel;

import model.ApplicationModel;
import model.Publisher;
import model.tree.TreeElement.Column;
import view.Subscriber;
import view.table.CustomCellRenderer;
/**
 * Kontejner za Input polja.
 * @author Milan Vlaski
 *
 */
public class InputPanel extends JPanel implements Subscriber{
	
	private List<Input> inputs = new ArrayList<>();
	
	public InputPanel() {
		setLayout(new FlowLayout(FlowLayout.LEFT));
		setBackground(CustomCellRenderer.DARKER_BACKGROUND);
				
		setVisible(true);
	}
	
	public void setFields(List<Column> columns) {
		removeAll();
		inputs.clear();
		
		for (Column column : columns) {
			Input input = InputFactory.createInput(column);
			inputs.add(input);
			add((Component)input);
		}
		revalidate();
	}
	
	public void fillFields(List<Object> row) {
		for (int i = 0; i < row.size(); i++) {
			inputs.get(i).setValue(row.get(i));
		}
	}

	@Override
	public void update(Publisher context) {
		setFields(((ApplicationModel) context).getMainTableModel().getColumns());
	}
}
