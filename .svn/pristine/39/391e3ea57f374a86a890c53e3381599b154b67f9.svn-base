package model.table;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import model.ProcedureService;

public class CustomTableModel extends GeneralTableModel{

	ProcedureService procedureService;
	
	public CustomTableModel(ProcedureService procedureService) {
		this.procedureService = procedureService;
		getAllData();
	}
	
	@Override
	public void getAllData() {
		ResultSet resultSet = procedureService.retrieve();
		ResultSetMetaData rsmd;
		
		this.columns = new ArrayList<>();
		this.data = new ArrayList<>();
		
		try {
			rsmd = resultSet.getMetaData();
			
			for(int i = 1; i <= rsmd.getColumnCount(); i++) {
				this.columns.add(new TableColumnModel(rsmd.getColumnName(i),
						rsmd.getColumnLabel(i),
						false));
			}
			
			
			List<Object> header = new ArrayList<>();
			for (TableColumnModel tableColumnModel : columns) {		
				header.add(tableColumnModel.getColumnName());
				}
				this.data.add(header);
			
			
			while (resultSet.next()) {
				List<Object> row = new ArrayList<>();
				for (int i = 1; i <= rsmd.getColumnCount(); i++) {
					row.add(resultSet.getObject(i));
				}
				this.data.add(row);
			}		
			//ispisuje na komandnu liniju
//			showData(resultSet);
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public boolean deleteRow(Object rowId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean getRowById(Object rowId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void addRow(HashMap<String, String> params) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void editRow(HashMap<String, String> params) {
		// TODO Auto-generated method stub
		
	}

	private void showData(ResultSet rs) throws SQLException {
		
		ResultSetMetaData rsmd = rs.getMetaData();
		
		//ispis naziva kolona
		for (int i = 1; i <= rsmd.getColumnCount(); i++) {
			System.out.print(String.format("%-50s", rsmd.getColumnLabel(i)));
		}
		
		System.out.println();
		//ispis tipova kolona
		for (int i = 1; i <= rsmd.getColumnCount(); i++) {
			System.out.print(String.format("%-50s", rsmd.getColumnClassName(i)));
		}
		
		//ispis separatora
		System.out.println();
		String separator = new String("-").repeat(50 * rsmd.getColumnCount());
		System.out.println(separator);
		
		//Vraca kursor na pocetak
		rs.absolute(0);
		//ispis podataka
		while(rs.next())
		{
			for (int i = 1; i <= rsmd.getColumnCount(); i++) {
				System.out.print(String.format("%-50s", rs.getObject(i)));
			}
			System.out.println();
		}		
	}
}
