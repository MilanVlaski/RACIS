package view.menubar;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.Vector;

import javax.swing.ImageIcon;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;

import model.ApplicationModel;

public class MenuBar extends JMenuBar{
	
	ApplicationModel appModel;
	
	public  MenuBar(ApplicationModel appModel) {
		// TODO Auto-generated constructor stub
	
		this.appModel = appModel;
		
		int iconWidth = 24; 
		int iconHeight = 24;
		
		JMenu fileMenu = new JMenu("File");
		fileMenu.setPreferredSize(new Dimension(80, fileMenu.getPreferredSize().height));
        JMenuItem switchItem = new JMenuItem("Switch XML");
        JMenuItem closeItem = new JMenuItem("Close application");
        
        switchItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_MASK));
        ImageIcon switchIcon=new ImageIcon("icons/menuIcons/icons8-switch-48.png");
        Image scaledSwitchImage = switchIcon.getImage().getScaledInstance(iconWidth, iconHeight, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledSwitchImage);
        
        ImageIcon closeIcon=new ImageIcon("icons/menuIcons/icons8-close-30.png");
        Image scaledCloseImage = closeIcon.getImage().getScaledInstance(iconWidth, iconHeight, Image.SCALE_SMOOTH);
        ImageIcon scaledCloseIcon = new ImageIcon(scaledCloseImage);
        
        switchItem.setIcon(scaledIcon);
        closeItem.setIcon(scaledCloseIcon);
   
        fileMenu.add(switchItem);
        fileMenu.addSeparator();
        fileMenu.add(closeItem);
       
        add(fileMenu);
        
        JMenu editMenu=new JMenu("Edit");
        editMenu.setPreferredSize(new Dimension(80, fileMenu.getPreferredSize().height));
        JMenuItem firstItem=new JMenuItem("First");
        JMenuItem nextItem=new JMenuItem("Next");
        JMenuItem previousItem=new JMenuItem("Previous");
        JMenuItem lastItem=new JMenuItem("Last");
        
        JMenuItem newItem=new JMenuItem("New");
        JMenuItem editItem=new JMenuItem("Edit");
        JMenuItem deleteItem=new JMenuItem("Delete");

        JMenuItem acceptItem=new JMenuItem("Accept");
        JMenuItem cancelItem=new JMenuItem("Cancel");

        JMenuItem reportItem=new JMenuItem("Report");   
        
        nextItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_L, KeyEvent.CTRL_MASK));
        previousItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R, KeyEvent.CTRL_MASK));
        newItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_MASK));
        deleteItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_D, KeyEvent.CTRL_MASK));
        acceptItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, KeyEvent.CTRL_MASK));
        reportItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I, KeyEvent.CTRL_MASK));
        
        ImageIcon firstIcon=new ImageIcon("icons/menuIcons/icons8-first-24.png");
        ImageIcon nextIcon=new ImageIcon("icons/menuIcons/icons8-next-24.png");
        ImageIcon previousIcon=new ImageIcon("icons/menuIcons/icons8-previous-24.png");
        ImageIcon lastIcon=new ImageIcon("icons/menuIcons/icons8-last-24.png");
        
        ImageIcon newIcon=new ImageIcon("icons/menuIcons/icons8-new-24.png");
        ImageIcon editIcon=new ImageIcon("icons/menuIcons/icons8-edit-24.png");
        ImageIcon deleteIcon=new ImageIcon("icons/menuIcons/icons8-delete-24.png");
        
        ImageIcon acceptIcon=new ImageIcon("icons/menuIcons/icons8-accept-24.png");
        ImageIcon cancelIcon=new ImageIcon("icons/menuIcons/icons8-cancel-24.png");
        
        ImageIcon reportIcon=new ImageIcon("icons/menuIcons/icons8-report-30.png");
        Image scaledReportImage = reportIcon.getImage().getScaledInstance(iconWidth, iconHeight, Image.SCALE_SMOOTH);
        ImageIcon scaledReportIcon = new ImageIcon(scaledReportImage);
        
        
        firstItem.setIcon(firstIcon);
        nextItem.setIcon(nextIcon);
        previousItem.setIcon(previousIcon);
        lastItem.setIcon(lastIcon);
        newItem.setIcon(newIcon);
        editItem.setIcon(editIcon);
        deleteItem.setIcon(deleteIcon);
        acceptItem.setIcon(acceptIcon);
        cancelItem.setIcon(cancelIcon);
        reportItem.setIcon(scaledReportIcon);
        
        editMenu.add(firstItem);
        editMenu.add(nextItem);
        editMenu.add(previousItem);
        editMenu.add(lastItem);
        editMenu.add(firstItem);
        editMenu.addSeparator();
        editMenu.add(newItem);
        editMenu.add(editItem);
        editMenu.add(deleteItem);
        editMenu.addSeparator();
        editMenu.add(acceptItem);
        editMenu.add(cancelItem);
        editMenu.addSeparator();
        editMenu.add(reportItem);
        
        add(editMenu);
        
        JMenu helpMenu=new JMenu("Help");
        helpMenu.setPreferredSize(new Dimension(80, fileMenu.getPreferredSize().height));
        JMenuItem aboutItem=new JMenuItem("About");
        
        ImageIcon aboutIcon=new ImageIcon("icons/menuIcons/icons8-about-30.png");
        Image scaledAboutImage = aboutIcon.getImage().getScaledInstance(iconWidth, iconHeight, Image.SCALE_SMOOTH);
        ImageIcon scaledAboutIcon = new ImageIcon(scaledAboutImage);
        
        aboutItem.setIcon(scaledAboutIcon);
        
        helpMenu.add(aboutItem);
        add(helpMenu);
        
        
	}

}
